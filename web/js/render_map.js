/*
    render_map - All the map rendering related functionality.
    Based on choropleth example at:
	http://leafletjs.com/examples/choropleth-example.html
    RS05092014
*/

// preparePriceData - Converts my messy JSON generated by R.
// This method is totally messy in itself, and there must be
// smarter ways, but I am not a JS expert.
function preparePriceData(rawData) {
    var pd = new Object();

    for (var idx in rawData) {
        var prop = new Object();
        prop.min = parseFloat(rawData[idx]["min_price"][0]);
        prop.max = parseFloat(rawData[idx]["max_price"][0]);
        prop.median = parseFloat(rawData[idx]["median_price"][0]);
        pd[rawData[idx]["id"][0]] = prop;
    }
    return pd;
}

// This is the main price related data object.
var priceData = preparePriceData(pDataRaw);

// Initialize the map.
var map = L.map('map').setView([52.949, -7.184], 7);

// Add the layer using my Mapbox token.
L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token=pk.eyJ1IjoiYmluYXJ5cmVhbG0iLCJhIjoiYjNiNmI2MzdjNmNjMWY0ZDc3MWZhZTIwOGE5YjY2NTYifQ.7l0y1vIS7KYLF2av_mzbrQ', {
    maxZoom: 18,
    attribution: 'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, ' +
        '<a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, ' +
        'Imagery Â© <a href="http://mapbox.com">Mapbox</a>',
    id: 'mapbox.light'
}).addTo(map);


// Control that shows county info on hover.
var info = L.control();

info.onAdd = function(map) {
    this._div = L.DomUtil.create('div', 'info');
    this.update();
    return this._div;
};

    info.update = function(props) {
    this._div.innerHTML = '<h2>Republic of Ireland</h2><h4>2015 Housing Prices Data</h4>' + (props ?
        'Median: <b>&euro;' + props.median + '</b><br/><br/>Max: <b>&euro; ' + props.max + '</b><br />Min: <b>&euro; ' + props.min + '</b>' : '<br/>Hover over a county');
};

info.addTo(map);

var PRICE_LEVELS = new Array(240500, 196000, 161500, 127000, 92500, 57793);
var COLORS = new Array('#b10026', '#e31a1c', '#fc4e2a', '#fd8d3c', '#feb24c', '#fed976', '#ffffb2');

// getColot - Get color depending on price value.
function getColor(d) {
    return d > PRICE_LEVELS[0] ? COLORS[0] :
        d > PRICE_LEVELS[1] ?  COLORS[1] :
        d > PRICE_LEVELS[2] ?  COLORS[2] :
        d > PRICE_LEVELS[3] ?  COLORS[3] :
        d > PRICE_LEVELS[4] ?  COLORS[4] :
        d > PRICE_LEVELS[5] ?  COLORS[5] :
        COLORS[6];
}

function getMedian(id) {
    return priceData[id].median;
}

// style - CSS style function.
function style(feature) {
    return {
        weight: 2,
        opacity: 1,
        color: 'white',
        dashArray: '3',
        fillOpacity: 0.7,
        fillColor: getColor(getMedian(feature.properties.id))
    };
}

function highlightFeature(e) {
    var layer = e.target;

    layer.setStyle({
        weight: 5,
        color: '#666',
        dashArray: '',
        fillOpacity: 0.7
    });

    if (!L.Browser.ie && !L.Browser.opera) {
        layer.bringToFront();
    }

    info.update(priceData[layer.feature.properties.id]);
    //getMean(layer.feature.properties)
}

var geojson;

function resetHighlight(e) {
    geojson.resetStyle(e.target);
    info.update();
}

function zoomToFeature(e) {
    map.fitBounds(e.target.getBounds());
}

function onEachFeature(feature, layer) {
    layer.on({
        mouseover: highlightFeature,
        mouseout: resetHighlight,
        click: zoomToFeature
    });
}

// Load the GeoJSON data file.
geojson = L.geoJson(irishCounties, {
    style: style,
    onEachFeature: onEachFeature
}).addTo(map);

map.attributionControl.addAttribution('Price data &copy; <a href="https://www.propertypriceregister.ie">Irish Property Price Register</a>');

var legend = L.control({
    position: 'bottomright'
});

legend.onAdd = function(map) {

    // Create the div for the legend.
    var div = L.DomUtil.create('div', 'info legend'),
        grades = PRICE_LEVELS,
        labels = [],
        from, to;

    for (var i = 0; i < grades.length; i++) {
        from = grades[i];
        to = grades[i + 1];

        labels.push(
            '<i style="background:' + getColor(from) + '"></i> ' +
            from + (to ? '&ndash;' + to : '+'));
    }

    div.innerHTML = labels.join('<br>');
    return div;
};

legend.addTo(map);
